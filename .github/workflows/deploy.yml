name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  checkout-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  set-up-jdk:
    needs: checkout-code
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

  build-jar:
    needs: set-up-jdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code again
        uses: actions/checkout@v2

      - name: Set up JDK 8 again
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Build JAR
        run: mvn clean package

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: target

  docker-build-and-push:
    needs: build-jar
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code again
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: target
          path: target

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Docker Build and Push
        run: |
          echo ECR_REGISTRY=$ECR_REGISTRY
          echo ECR_REPOSITORY=$ECR_REPOSITORY
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          aws ecr get-login-password --region  us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

  deploy-to-ec2:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          aws ecr get-login-password --region  us-east-1 | docker login --username AWS --password-stdin "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}"
          ssh -o StrictHostKeyChecking=no ec2-user@54.253.232.51 'docker stop web-attendance-reports || true'
          ssh -o StrictHostKeyChecking=no ec2-user@54.253.232.51 'docker rm web-attendance-reports || true'
          ssh -o StrictHostKeyChecking=no ec2-user@54.253.232.51 'docker pull "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}"'
          ssh -o StrictHostKeyChecking=no ec2-user@54.253.232.51 'docker run -d -p 8080:8080 --name web-attendance-reports "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}"'
